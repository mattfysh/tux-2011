namespace("tux.accounts");(function(){tux.accounts.Account=Backbone.Model.extend({defaults:{balance:0},adjustBalance:function(a){this.set({balance:this.get("balance")+a})},validate:function(a){if(typeof a.balance!=="number")return"balance must be a number"}})})();namespace("tux.accounts");
(function(){var a=/^(|(-?\$?|\$?-?)\d+\.?\d*)$/;tux.accounts.AccountForm=Backbone.View.extend({initialize:function(){this.render()},render:function(){var a=tux.accounts.accountForm();$(this.el).empty().append(a)},events:{"submit form":"process"},process:function(a){var c,d;a.preventDefault();c=this.getAccountFormData();this.$("p.error").remove();(d=this.validate(c))?$(this.el).append($("<p>",{"class":"error",text:d})):(c.balance=parse(c.balance),this.trigger("newaccount",c),a.target.reset())},getAccountFormData:function(){var a=
{};this.$(":input:not(:submit)").each(function(){a[this.getAttribute("name")]=$(this).val()});return a},validate:function(b){if(b.name){if(!a.test(b.balance))return"invalid balance format"}else return"name required"}})})();namespace("tux.accounts");
(function(){tux.accounts.AccountList=Backbone.Collection.extend({initialize:function(){this.model=tux.accounts.Account;this.localStorage=new Store("accounts");this.fetch()},getTotal:function(){return _(this.models).reduce(function(a,b){return a+b.get("balance")},0)}})})();namespace("tux.accounts");
(function(){tux.accounts.AccountsApp=Backbone.View.extend({id:"accounts",initialize:function(){var a;$("<table>").appendTo(this.el);_(this).bindAll("addAccountToList","displayAccount");this.list=new tux.accounts.AccountList;a=new tux.accounts.TotalView({collection:this.list});this.$("table").append(a.el);a=new tux.accounts.AccountForm;a.bind("newaccount",this.addAccountToList);$(this.el).append(a.el);this.list.each(this.displayAccount);this.list.bind("add",this.displayAccount)},addAccountToList:function(a){this.list.create(a)},
displayAccount:function(a){a=new tux.accounts.AccountView({model:a});this.$("table tr.total").before(a.el)}})})();namespace("tux.accounts");
(function(){tux.accounts.AccountView=Backbone.View.extend({tagName:"tr",initialize:function(){_(this).bindAll("remove");this.model.bind("remove",this.remove);this.render()},events:{"click a.destroy":"destroy"},render:function(){var a=this.model.toJSON(),a=tux.accounts.accountView(a);$(this.el).empty().append(a);return this},destroy:function(a){a.preventDefault();this.model.destroy()}})})();namespace("tux.accounts");
(function(){tux.accounts.TotalView=Backbone.View.extend({tagName:"tr",className:"total",initialize:function(){_(this).bindAll("render");this.collection.bind("add",this.render).bind("remove",this.render).bind("change:balance",this.render);this.render()},render:function(){var a=tux.accounts.totalView({total:this.collection.getTotal()});$(this.el).empty().append(a)}})})();namespace("tux.accounts");
tux.accounts.accountForm=function(a){var b=[];with(a||{})b.push('<form>\r\n\t<input type="text" name="name" />\r\n\t<input type="text" name="balance" />\r\n\t<input type="submit" />\r\n</form>');return b.join("")};tux.accounts.accountView=function(a){var b=[];with(a||{})b.push("<td>",name,"</td><td>",format(balance),'</td><td><a class="destroy" href="destroy">delete</a></td>\r\n');return b.join("")};
tux.accounts.totalView=function(a){var b=[];with(a||{})b.push("<td>Total</td><td>",format(total),"</td>\r\n");return b.join("")};
